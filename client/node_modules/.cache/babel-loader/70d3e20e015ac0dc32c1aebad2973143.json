{"ast":null,"code":"var _jsxFileName = \"H:\\\\AgroChain\\\\client\\\\src\\\\components\\\\productsComponents\\\\cartList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Router } from 'react-router-dom';\nimport axios from 'axios'; // MaterialUI Elements\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport style from \"../../styles/cartStyles\";\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport RemoveShoppingCartIcon from '@mui/icons-material/RemoveShoppingCart';\nimport CartItems from './cartItems';\nimport * as api from \"../../api/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n});\n_c2 = Alert;\nexport default function CartList(_ref) {\n  _s();\n\n  let {\n    products\n  } = _ref;\n  const [snakeBarOpen, setSnakeBarOpen] = useState(false);\n  const [snakeBarType, setSnakeBarType] = useState(\"success\");\n  const [snakeMessage, setSnakeMessage] = useState(\"\");\n  let disableButton = products.length === 0 ? true : false;\n  let buttonText = disableButton ? \"List empty\" : \"Place Order\";\n  let buttonIcon = disableButton ? /*#__PURE__*/_jsxDEV(RemoveShoppingCartIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 39\n  }, this) : /*#__PURE__*/_jsxDEV(DoneAllIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 70\n  }, this);\n\n  const handleCloseSnakeBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnakeBarOpen(false);\n  };\n\n  let price = 0;\n\n  for (let i = 0; i < products.length; i++) {\n    price += (products[i].PRODUCT_AGRO_PRICE - products[i].PRODUCT_AGRO_PRICE * products[i].PRODUCT_DISCOUNT / 100) * products[i].CART_QUANTITY;\n  }\n\n  const classes = style();\n\n  const submitOrders = async e => {\n    e.preventDefault();\n    const authAxios = axios.create({\n      headers: {\n        \"x-access-token\": localStorage.getItem('token')\n      }\n    });\n    const userId = localStorage.getItem(\"userId\");\n    authAxios.post(`/api/products/cart/submit/${userId}`).then(res => {\n      if (res.status === 200) {\n        setSnakeBarOpen(true);\n        setSnakeBarType(\"success\");\n        setSnakeMessage(\"Order Successfully submitted\");\n      }\n    }).catch(err => {\n      console.log(err.message);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snakeBarOpen,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnakeBar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnakeBar,\n        severity: snakeBarType,\n        sx: {\n          width: '100%'\n        },\n        children: snakeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      className: classes.cartHeaderBox,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.cartHeading,\n        children: \"Items in your cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: classes.cartPrice,\n        children: [\"Total Price: \", price, \" Taka\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: products.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 6,\n        xl: 6,\n        children: /*#__PURE__*/_createElement(CartItems, { ...product,\n          key: product.CART_ID,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }\n        })\n      }, product.CART_ID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      startIcon: buttonIcon,\n      className: classes.placeButton,\n      onClick: submitOrders,\n      disabled: disableButton,\n      children: buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CartList, \"aRw8w+N8Hwt9uyhZn0yJFYb7kfI=\");\n\n_c3 = CartList;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"CartList\");","map":{"version":3,"sources":["H:/AgroChain/client/src/components/productsComponents/cartList.js"],"names":["React","useState","useEffect","Router","axios","Grid","Button","Paper","style","DoneAllIcon","Snackbar","MuiAlert","RemoveShoppingCartIcon","CartItems","api","Alert","forwardRef","props","ref","CartList","products","snakeBarOpen","setSnakeBarOpen","snakeBarType","setSnakeBarType","snakeMessage","setSnakeMessage","disableButton","length","buttonText","buttonIcon","handleCloseSnakeBar","event","reason","price","i","PRODUCT_AGRO_PRICE","PRODUCT_DISCOUNT","CART_QUANTITY","classes","submitOrders","e","preventDefault","authAxios","create","headers","localStorage","getItem","userId","post","then","res","status","catch","err","console","log","message","width","cartHeaderBox","cartHeading","cartPrice","map","product","CART_ID","placeButton"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport {Router} from 'react-router-dom'\r\nimport axios from 'axios';\r\n// MaterialUI Elements\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport style from \"../../styles/cartStyles\"\r\nimport DoneAllIcon from '@mui/icons-material/DoneAll';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport RemoveShoppingCartIcon from '@mui/icons-material/RemoveShoppingCart';\r\n\r\nimport CartItems from './cartItems'\r\nimport * as api from \"../../api/users\"\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\n\r\nexport default function CartList({products}) {\r\n    const [snakeBarOpen, setSnakeBarOpen] = useState(false);\r\n    const [snakeBarType, setSnakeBarType] = useState(\"success\");\r\n    const [snakeMessage, setSnakeMessage] = useState(\"\");\r\n\r\n    let disableButton = products.length === 0 ? true : false;\r\n    let buttonText = disableButton ? \"List empty\" : \"Place Order\"\r\n    let buttonIcon = disableButton ? (<RemoveShoppingCartIcon />) : (<DoneAllIcon />);\r\n\r\n    const handleCloseSnakeBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnakeBarOpen(false);\r\n    };\r\n\r\n    let price = 0;\r\n    for(let i = 0; i < products.length; i++){\r\n        price += (products[i].PRODUCT_AGRO_PRICE - products[i].PRODUCT_AGRO_PRICE * products[i].PRODUCT_DISCOUNT /100) * products[i].CART_QUANTITY\r\n    }\r\n    const classes = style();\r\n\r\n\r\n    const submitOrders = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        const authAxios = axios.create({\r\n            headers: {\r\n                \"x-access-token\": localStorage.getItem('token')\r\n            }\r\n        })\r\n\r\n        const userId = localStorage.getItem(\"userId\");\r\n        authAxios.post(`/api/products/cart/submit/${userId}`).then(res => {\r\n            if(res.status === 200){\r\n                setSnakeBarOpen(true);\r\n                setSnakeBarType(\"success\");\r\n                setSnakeMessage(\"Order Successfully submitted\")\r\n            }\r\n        }).catch(err => {\r\n            console.log(err.message);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar open={snakeBarOpen} autoHideDuration={6000} onClose={handleCloseSnakeBar}>\r\n                <Alert onClose={handleCloseSnakeBar} severity={snakeBarType} sx={{ width: '100%' }}>\r\n                    {snakeMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            <Paper elevation={0} className={classes.cartHeaderBox}>\r\n                <h1 className={classes.cartHeading}>\r\n                    Items in your cart\r\n                </h1>\r\n                <h3 className={classes.cartPrice}>\r\n                    Total Price: {price} Taka\r\n                </h3>\r\n            </Paper>\r\n            <Grid container spacing={2} >\r\n                {products.map(product => (\r\n                    <Grid item xs={12} sm={12} md={6} xl={6}  key={product.CART_ID}>\r\n                        <CartItems {...product} key={product.CART_ID}/>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n            <Button variant=\"contained\" \r\n                startIcon={buttonIcon} \r\n                className={classes.placeButton}\r\n                onClick={submitOrders}\r\n                disabled={disableButton}\r\n            >\r\n                    {buttonText}\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}