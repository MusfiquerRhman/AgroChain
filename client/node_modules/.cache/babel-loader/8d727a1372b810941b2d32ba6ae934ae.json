{"ast":null,"code":"var _jsxFileName = \"H:\\\\AgroChain\\\\client\\\\src\\\\components\\\\productsComponents\\\\product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Router } from 'react-router-dom';\nimport axios from 'axios';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Input from '@mui/material/Input';\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport style from \"../../styles/productStyle\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Alert;\nexport default function Product(props) {\n  _s();\n\n  const [value, setValue] = useState(\"\");\n  const [totalPrice, setTotalPrice] = useState(\"Enter Amount\");\n  const [snakeBarOpen, setSnakebarOpen] = useState(false);\n  const [flashMessage, setFlashMEssage] = useState(\"\");\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [snakeBarType, setSnakeBarType] = useState(\"success\");\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem(\"userId\");\n\n    if (loggedInUser) {\n      setIsLoggedIn(true);\n    }\n  });\n\n  const handleChange = event => {\n    setValue(event.target.value);\n\n    if (event.target.value !== \"\") {\n      setTotalPrice(`Price: ${(PRODUCT_AGRO_PRICE - PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT / 100) * event.target.value}`);\n    } else {\n      setSnakeBarType(\"error\");\n      setTotalPrice(\"Add to cart\");\n    }\n  };\n\n  const {\n    PRODUCT_ID,\n    ADMIN_ID,\n    PRODUCT_NAME_EN,\n    PRODUCT_NAME_BN,\n    PRODUCT_IN_STOCK_QUANTITY,\n    PRODUCT_MEASUREMENT_UNIT,\n    PRODUCT_AGRO_PRICE,\n    PRODUCT_DISCOUNT,\n    PRODUCT_IMG\n  } = props;\n  const photo = `/img/${PRODUCT_IMG}`;\n  const classes = style();\n\n  const submitForm = async e => {\n    if (value > 0) {\n      const formdata = new FormData();\n      formdata.append(\"userId\", localStorage.getItem(\"userId\"));\n      formdata.append(\"productId\", PRODUCT_ID);\n      formdata.append(\"quantity\", value);\n      setSnakebarOpen(false);\n      axios.post('/api/products/cart', formdata, {\n        headers: {\n          \"x-access-token\": localStorage.getItem('token')\n        }\n      }).then(res => {\n        if (res.status === 201) {\n          setSnakebarOpen(true);\n          setFlashMEssage(`${PRODUCT_NAME_EN} (${PRODUCT_NAME_BN}) Added to cart`);\n          setValue(\"\");\n        }\n      }).catch(err => {\n        setSnakeBarType(\"error\");\n        setFlashMEssage(\"Server Error! please try again later\");\n        console.log(err.message);\n      });\n    } else {\n      setSnakebarOpen(true);\n      setSnakeBarType(\"error\");\n      setFlashMEssage(\"Enter a valid amount\");\n    }\n  };\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnakebarOpen(false);\n  };\n\n  let isAvailable = true;\n  let offerText = \"ðŸ˜… No offer available\";\n\n  if (PRODUCT_IN_STOCK_QUANTITY <= 0) {\n    offerText = \"ðŸ˜¥ Currently not in stock\";\n    isAvailable = false;\n  } else if (PRODUCT_DISCOUNT > 0) {\n    let price = PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT / 100;\n    offerText = `ðŸ’• Discount: à§³ ${price} /  ${PRODUCT_MEASUREMENT_UNIT} (${PRODUCT_DISCOUNT}%)`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snakeBarOpen,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snakeBarType,\n        sx: {\n          width: '100%'\n        },\n        children: flashMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: () => Router.push(`/products/${PRODUCT_ID}`),\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: `ðŸ¥— ${PRODUCT_NAME_EN}`,\n          subheader: `${PRODUCT_NAME_BN} - à§³ ${PRODUCT_AGRO_PRICE} / ${PRODUCT_MEASUREMENT_UNIT}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          alt: \"green iguana\",\n          height: \"120\",\n          image: photo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.offer,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"subtitle1\",\n            component: \"div\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: offerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            marginRight: 1,\n            marginLeft: 1,\n            width: \"25ch\"\n          },\n          variant: \"outlined\",\n          focused: true,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"outlined-adornment-weight\",\n            value: value,\n            color: \"secondary\",\n            onChange: e => {\n              handleChange(e);\n            },\n            disabled: !isAvailable || !isLoggedIn,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: PRODUCT_MEASUREMENT_UNIT\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this),\n            \"aria-describedby\": \"outlined-weight-helper-text\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            id: \"outlined-weight-helper-text\",\n            children: totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          disabled: !isAvailable || !isLoggedIn,\n          onClick: submitForm,\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Product, \"Q1MFhGDr4iaOgyLDzpSnomKXvco=\");\n\n_c3 = Product;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Product\");","map":{"version":3,"sources":["H:/AgroChain/client/src/components/productsComponents/product.js"],"names":["React","useState","useEffect","Router","axios","CardContent","CardMedia","Typography","ListItemText","Input","InputAdornment","FormHelperText","FormControl","CardActions","Button","Paper","CardHeader","CardActionArea","Snackbar","MuiAlert","style","Alert","forwardRef","props","ref","Product","value","setValue","totalPrice","setTotalPrice","snakeBarOpen","setSnakebarOpen","flashMessage","setFlashMEssage","isLoggedIn","setIsLoggedIn","snakeBarType","setSnakeBarType","loggedInUser","localStorage","getItem","handleChange","event","target","PRODUCT_AGRO_PRICE","PRODUCT_DISCOUNT","PRODUCT_ID","ADMIN_ID","PRODUCT_NAME_EN","PRODUCT_NAME_BN","PRODUCT_IN_STOCK_QUANTITY","PRODUCT_MEASUREMENT_UNIT","PRODUCT_IMG","photo","classes","submitForm","e","formdata","FormData","append","post","headers","then","res","status","catch","err","console","log","message","handleCloseSnackbar","reason","isAvailable","offerText","price","width","push","offer","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Router} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Input from '@mui/material/Input';\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport style from \"../../styles/productStyle\"\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function Product(props) {\r\n    const [value, setValue] = useState(\"\")\r\n    const [totalPrice, setTotalPrice] = useState(\"Enter Amount\")\r\n    const [snakeBarOpen, setSnakebarOpen] = useState(false)\r\n    const [flashMessage, setFlashMEssage] = useState(\"\");\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [snakeBarType, setSnakeBarType] = useState(\"success\");\r\n\r\n    useEffect(() => {\r\n        const loggedInUser = localStorage.getItem(\"userId\");\r\n        if(loggedInUser){\r\n            setIsLoggedIn(true);\r\n        }\r\n    })\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        if(event.target.value !== \"\"){\r\n            setTotalPrice(`Price: ${(PRODUCT_AGRO_PRICE - PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT /100) * event.target.value}`);\r\n        } else {\r\n            setSnakeBarType(\"error\")\r\n            setTotalPrice(\"Add to cart\")\r\n        }\r\n    };\r\n\r\n\r\n    const {PRODUCT_ID, \r\n        ADMIN_ID, \r\n        PRODUCT_NAME_EN, \r\n        PRODUCT_NAME_BN, \r\n        PRODUCT_IN_STOCK_QUANTITY, \r\n        PRODUCT_MEASUREMENT_UNIT, \r\n        PRODUCT_AGRO_PRICE, \r\n        PRODUCT_DISCOUNT, \r\n        PRODUCT_IMG\r\n    } = props;\r\n\r\n    const photo = `/img/${PRODUCT_IMG}`;\r\n    const classes = style();\r\n\r\n    const submitForm = async (e) => {\r\n        if(value > 0){\r\n            const formdata = new FormData();\r\n            formdata.append(\"userId\", localStorage.getItem(\"userId\"));\r\n            formdata.append(\"productId\", PRODUCT_ID);\r\n            formdata.append(\"quantity\", value);\r\n\r\n            setSnakebarOpen(false);\r\n            axios.post('/api/products/cart', formdata, {\r\n                headers: {\r\n                    \"x-access-token\": localStorage.getItem('token')\r\n                }\r\n            }).then(res => {\r\n                if(res.status === 201){\r\n                    setSnakebarOpen(true);\r\n                    setFlashMEssage(`${PRODUCT_NAME_EN} (${PRODUCT_NAME_BN}) Added to cart`);\r\n                    setValue(\"\")\r\n                }\r\n            }).catch(err => {\r\n                setSnakeBarType(\"error\")\r\n                setFlashMEssage(\"Server Error! please try again later\");\r\n                console.log(err.message);\r\n            });\r\n        }\r\n        else {\r\n            setSnakebarOpen(true);\r\n            setSnakeBarType(\"error\");\r\n            setFlashMEssage(\"Enter a valid amount\");\r\n        }\r\n    }\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnakebarOpen(false);\r\n    };\r\n\r\n    let isAvailable = true;\r\n    let offerText = \"ðŸ˜… No offer available\"\r\n\r\n    if(PRODUCT_IN_STOCK_QUANTITY <= 0){\r\n        offerText = \"ðŸ˜¥ Currently not in stock\"\r\n        isAvailable = false;\r\n    }\r\n    else if(PRODUCT_DISCOUNT > 0){\r\n        let price = PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT / 100;\r\n        offerText = `ðŸ’• Discount: à§³ ${price} /  ${PRODUCT_MEASUREMENT_UNIT} (${PRODUCT_DISCOUNT}%)`\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar \r\n                open={snakeBarOpen} \r\n                autoHideDuration={6000} \r\n                onClose={handleCloseSnackbar}\r\n            >\r\n                <Alert \r\n                    onClose={handleCloseSnackbar} \r\n                    severity={snakeBarType} \r\n                    sx={{ width: '100%' }}\r\n                >\r\n                    {flashMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Paper elevation={6}>\r\n                <CardActionArea onClick={() => Router.push(`/products/${PRODUCT_ID}`)}>\r\n                    <CardHeader\r\n                        title={`ðŸ¥— ${PRODUCT_NAME_EN}`}\r\n                        subheader={`${PRODUCT_NAME_BN} - à§³ ${PRODUCT_AGRO_PRICE} / ${PRODUCT_MEASUREMENT_UNIT}`}\r\n                    />\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"green iguana\"\r\n                        height=\"120\"\r\n                        image={photo}\r\n                    />\r\n                    <CardContent  className={classes.offer}>\r\n                        <Typography \r\n                            gutterBottom \r\n                            variant=\"subtitle1\" \r\n                            component=\"div\"\r\n                        >\r\n                            <ListItemText primary={offerText}/>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n                {isLoggedIn && (\r\n                    <CardActions>\r\n                        <FormControl sx={{ marginRight: 1, marginLeft: 1, width: \"25ch\" }} variant=\"outlined\" focused>\r\n                            <Input\r\n                                id=\"outlined-adornment-weight\"\r\n                                value={value}\r\n                                color= \"secondary\"\r\n                                onChange={(e) => {handleChange(e)}}\r\n                                disabled={!isAvailable || !isLoggedIn}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        {PRODUCT_MEASUREMENT_UNIT}\r\n                                    </InputAdornment>\r\n                                }\r\n                                aria-describedby=\"outlined-weight-helper-text\"    \r\n                                type=\"number\"                    \r\n                            />\r\n                            <FormHelperText id=\"outlined-weight-helper-text\">\r\n                                {totalPrice}\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                        <Button \r\n                            size=\"small\" \r\n                            variant=\"contained\"\r\n                            disabled={!isAvailable || !isLoggedIn}\r\n                            onClick={submitForm}\r\n                        >\r\n                            Add to cart\r\n                        </Button>\r\n                    </CardActions>\r\n                )}\r\n\r\n            </Paper>\r\n        </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}