{"ast":null,"code":"var _jsxFileName = \"H:\\\\Agro Chain\\\\agro_chain\\\\client\\\\src\\\\components\\\\productsComponents\\\\product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux'; // MaterialUI Elements\n\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Input from '@mui/material/Input';\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormHelperText from \"@mui/material/FormHelperText\";\nimport FormControl from \"@mui/material/FormControl\";\nimport CardActions from '@mui/material/CardActions';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActionArea from '@mui/material/CardActionArea';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport style from \"../../styles/productStyle\";\nimport * as userApi from \"../../api/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Alert;\nexport default function Product(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const users = useSelector(state => state.users);\n  const [value, setValue] = useState(\"\");\n  const [totalPrice, setTotalPrice] = useState(\"Enter Amount\");\n  const [snakeBarOpen, setSnakebarOpen] = useState(false);\n  const [flashMessage, setFlashMEssage] = useState(\"\");\n  const [snakeBarType, setSnakeBarType] = useState(\"success\"); // useEffect(() => {\n  //     async function fetchData(){ \n  //         const res = await userApi.isLoggedIn();\n  //         if(res.data.code === 200 || res.data.code === 970904){\n  //             setIsLoggedIn(true);\n  //         }\n  //     }\n  //     fetchData()\n  // }, [users.userId])\n\n  const handleChange = event => {\n    setValue(event.target.value);\n\n    if (event.target.value !== \"\") {\n      setTotalPrice(`Price: ${(PRODUCT_AGRO_PRICE - PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT / 100) * event.target.value}`);\n    } else {\n      setSnakeBarType(\"error\");\n      setTotalPrice(\"Add to cart\");\n    }\n  };\n\n  const {\n    PRODUCT_ID,\n    PRODUCT_NAME_EN,\n    PRODUCT_NAME_BN,\n    PRODUCT_IN_STOCK_QUANTITY,\n    PRODUCT_MEASUREMENT_UNIT,\n    PRODUCT_AGRO_PRICE,\n    PRODUCT_DISCOUNT,\n    PRODUCT_IMG\n  } = props;\n  const photo = `/img/${PRODUCT_IMG}`;\n  const classes = style();\n\n  const submitForm = async e => {\n    if (value > 0) {\n      setSnakebarOpen(false);\n      const res = await userApi.addToCart(PRODUCT_ID, value);\n\n      if (res.status === 201) {\n        setSnakebarOpen(true);\n        setSnakeBarType(\"success\");\n        setFlashMEssage(`${PRODUCT_NAME_EN} (${PRODUCT_NAME_BN}) Added to cart`);\n        setValue(\"\");\n      } else {\n        setSnakebarOpen(true);\n        setSnakeBarType(\"error\");\n        setFlashMEssage(\"Server Error! please try again later\");\n      }\n    } else {\n      setSnakebarOpen(true);\n      setSnakeBarType(\"error\");\n      setFlashMEssage(\"Enter a valid amount\");\n    }\n  };\n\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnakebarOpen(false);\n  };\n\n  let isAvailable = true;\n  let offerText = \"ðŸ˜… No offer available\";\n\n  if (PRODUCT_IN_STOCK_QUANTITY <= 0) {\n    offerText = \"ðŸ˜¥ Currently not in stock\";\n    isAvailable = false;\n  } else if (PRODUCT_DISCOUNT > 0) {\n    let price = PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT / 100;\n    offerText = `ðŸ’• Discount: à§³ ${price} /  ${PRODUCT_MEASUREMENT_UNIT} (${PRODUCT_DISCOUNT}%)`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snakeBarOpen,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnackbar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnackbar,\n        severity: snakeBarType,\n        sx: {\n          width: '100%'\n        },\n        children: flashMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        onClick: () => navigate(`/products/${PRODUCT_ID}`),\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: `ðŸ¥— ${PRODUCT_NAME_EN}`,\n          subheader: `${PRODUCT_NAME_BN} - à§³ ${PRODUCT_AGRO_PRICE} / ${PRODUCT_MEASUREMENT_UNIT}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          alt: \"green iguana\",\n          height: \"120\",\n          image: photo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          className: classes.offer,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"subtitle1\",\n            component: \"div\",\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: offerText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), users.userId && /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          sx: {\n            marginRight: 1,\n            marginLeft: 1,\n            width: \"25ch\"\n          },\n          variant: \"outlined\",\n          focused: true,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            id: \"outlined-adornment-weight\",\n            value: value,\n            color: \"secondary\",\n            onChange: e => {\n              handleChange(e);\n            },\n            disabled: !isAvailable || !users.userId,\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: PRODUCT_MEASUREMENT_UNIT\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this),\n            \"aria-describedby\": \"outlined-weight-helper-text\",\n            type: \"number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            id: \"outlined-weight-helper-text\",\n            children: totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"contained\",\n          disabled: !isAvailable || !users.userId,\n          onClick: submitForm,\n          children: \"Add to cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Product, \"Li/RhYUNBnFeuIA74dl7ScLl9Q0=\", false, function () {\n  return [useNavigate, useSelector];\n});\n\n_c3 = Product;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"Product\");","map":{"version":3,"sources":["H:/Agro Chain/agro_chain/client/src/components/productsComponents/product.js"],"names":["React","useState","useNavigate","useSelector","CardContent","CardMedia","Typography","ListItemText","Input","InputAdornment","FormHelperText","FormControl","CardActions","Button","Paper","CardHeader","CardActionArea","Snackbar","MuiAlert","style","userApi","Alert","forwardRef","props","ref","Product","navigate","users","state","value","setValue","totalPrice","setTotalPrice","snakeBarOpen","setSnakebarOpen","flashMessage","setFlashMEssage","snakeBarType","setSnakeBarType","handleChange","event","target","PRODUCT_AGRO_PRICE","PRODUCT_DISCOUNT","PRODUCT_ID","PRODUCT_NAME_EN","PRODUCT_NAME_BN","PRODUCT_IN_STOCK_QUANTITY","PRODUCT_MEASUREMENT_UNIT","PRODUCT_IMG","photo","classes","submitForm","e","res","addToCart","status","handleCloseSnackbar","reason","isAvailable","offerText","price","width","offer","userId","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux'\r\n// MaterialUI Elements\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport Input from '@mui/material/Input';\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\nimport FormHelperText from \"@mui/material/FormHelperText\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport CardActions from '@mui/material/CardActions';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nimport style from \"../../styles/productStyle\"\r\nimport * as userApi from \"../../api/users\"\r\n\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nexport default function Product(props) {\r\n    const navigate = useNavigate();\r\n    const users = useSelector((state) => state.users);\r\n    const [value, setValue] = useState(\"\");\r\n    const [totalPrice, setTotalPrice] = useState(\"Enter Amount\");\r\n    const [snakeBarOpen, setSnakebarOpen] = useState(false)\r\n    const [flashMessage, setFlashMEssage] = useState(\"\");\r\n    const [snakeBarType, setSnakeBarType] = useState(\"success\");\r\n\r\n    // useEffect(() => {\r\n    //     async function fetchData(){ \r\n    //         const res = await userApi.isLoggedIn();\r\n    //         if(res.data.code === 200 || res.data.code === 970904){\r\n    //             setIsLoggedIn(true);\r\n    //         }\r\n    //     }\r\n    //     fetchData()\r\n    // }, [users.userId])\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n        if (event.target.value !== \"\") {\r\n            setTotalPrice(`Price: ${(PRODUCT_AGRO_PRICE - PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT / 100) * event.target.value}`);\r\n        } else {\r\n            setSnakeBarType(\"error\")\r\n            setTotalPrice(\"Add to cart\")\r\n        }\r\n    };\r\n\r\n\r\n    const { PRODUCT_ID,\r\n        PRODUCT_NAME_EN,\r\n        PRODUCT_NAME_BN,\r\n        PRODUCT_IN_STOCK_QUANTITY,\r\n        PRODUCT_MEASUREMENT_UNIT,\r\n        PRODUCT_AGRO_PRICE,\r\n        PRODUCT_DISCOUNT,\r\n        PRODUCT_IMG\r\n    } = props;\r\n\r\n    const photo = `/img/${PRODUCT_IMG}`;\r\n    const classes = style();\r\n\r\n    const submitForm = async (e) => {\r\n        if (value > 0) {\r\n            setSnakebarOpen(false);\r\n            const res = await userApi.addToCart(PRODUCT_ID, value);\r\n\r\n            if (res.status === 201) {\r\n                setSnakebarOpen(true);\r\n                setSnakeBarType(\"success\")\r\n                setFlashMEssage(`${PRODUCT_NAME_EN} (${PRODUCT_NAME_BN}) Added to cart`);\r\n                setValue(\"\")\r\n            }\r\n            else {\r\n                setSnakebarOpen(true);\r\n                setSnakeBarType(\"error\")\r\n                setFlashMEssage(\"Server Error! please try again later\");\r\n            }\r\n        }\r\n        else {\r\n            setSnakebarOpen(true);\r\n            setSnakeBarType(\"error\");\r\n            setFlashMEssage(\"Enter a valid amount\");\r\n        }\r\n    }\r\n\r\n    const handleCloseSnackbar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnakebarOpen(false);\r\n    };\r\n\r\n    let isAvailable = true;\r\n    let offerText = \"ðŸ˜… No offer available\"\r\n\r\n    if (PRODUCT_IN_STOCK_QUANTITY <= 0) {\r\n        offerText = \"ðŸ˜¥ Currently not in stock\"\r\n        isAvailable = false;\r\n    }\r\n    else if (PRODUCT_DISCOUNT > 0) {\r\n        let price = PRODUCT_AGRO_PRICE * PRODUCT_DISCOUNT / 100;\r\n        offerText = `ðŸ’• Discount: à§³ ${price} /  ${PRODUCT_MEASUREMENT_UNIT} (${PRODUCT_DISCOUNT}%)`\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar\r\n                open={snakeBarOpen}\r\n                autoHideDuration={6000}\r\n                onClose={handleCloseSnackbar}\r\n            >\r\n                <Alert\r\n                    onClose={handleCloseSnackbar}\r\n                    severity={snakeBarType}\r\n                    sx={{ width: '100%' }}\r\n                >\r\n                    {flashMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n            <Paper elevation={6}>\r\n                <CardActionArea onClick={() => navigate(`/products/${PRODUCT_ID}`)}>\r\n                    <CardHeader\r\n                        title={`ðŸ¥— ${PRODUCT_NAME_EN}`}\r\n                        subheader={`${PRODUCT_NAME_BN} - à§³ ${PRODUCT_AGRO_PRICE} / ${PRODUCT_MEASUREMENT_UNIT}`}\r\n                    />\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"green iguana\"\r\n                        height=\"120\"\r\n                        image={photo}\r\n                    />\r\n                    <CardContent className={classes.offer}>\r\n                        <Typography\r\n                            gutterBottom\r\n                            variant=\"subtitle1\"\r\n                            component=\"div\"\r\n                        >\r\n                            <ListItemText primary={offerText} />\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n\r\n                {users.userId && (\r\n                    <CardActions>\r\n                        <FormControl sx={{ marginRight: 1, marginLeft: 1, width: \"25ch\" }} variant=\"outlined\" focused>\r\n                            <Input\r\n                                id=\"outlined-adornment-weight\"\r\n                                value={value}\r\n                                color=\"secondary\"\r\n                                onChange={(e) => { handleChange(e) }}\r\n                                disabled={!isAvailable || !users.userId}\r\n                                endAdornment={\r\n                                    <InputAdornment position=\"end\">\r\n                                        {PRODUCT_MEASUREMENT_UNIT}\r\n                                    </InputAdornment>\r\n                                }\r\n                                aria-describedby=\"outlined-weight-helper-text\"\r\n                                type=\"number\"\r\n                            />\r\n                            <FormHelperText id=\"outlined-weight-helper-text\">\r\n                                {totalPrice}\r\n                            </FormHelperText>\r\n                        </FormControl>\r\n                        <Button\r\n                            size=\"small\"\r\n                            variant=\"contained\"\r\n                            disabled={!isAvailable || !users.userId}\r\n                            onClick={submitForm}\r\n                        >\r\n                            Add to cart\r\n                        </Button>\r\n                    </CardActions>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}