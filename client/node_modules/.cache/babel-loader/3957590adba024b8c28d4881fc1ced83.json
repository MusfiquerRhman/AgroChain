{"ast":null,"code":"var _jsxFileName = \"H:\\\\Agro Chain\\\\agro_chain\\\\client\\\\src\\\\components\\\\adminComponents\\\\AddProducts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // MaterialUI Elements\n\nimport Typography from '@mui/material/Typography';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport BorderLinearProgress from '../../styles/BorderLinearProgress';\nimport style from \"../../styles/formStyle\";\nimport useInputState from '../../hooks/useInputState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef(_c = function Alert(props, ref) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    ref: ref,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 12\n  }, this);\n});\n_c2 = Alert;\n\nfunction AddProducts() {\n  _s();\n\n  const [nameEN, handleChangeNameEn, setNameEn] = useInputState(\"\");\n  const [nameBN, handleChangeNameBn, setNameBN] = useInputState(\"\");\n  const [inStockQuantity, handleChangeInStockQuantity, setInStockQuantity] = useInputState(\"\");\n  const [measurementUnit, handleChangeMeasurementUnit, setMeasurementUnit] = useInputState(\"\");\n  const [details, handleChangeDetails, setdetails] = useInputState(\"\");\n  const [price, handleChangePrice, setPrice] = useInputState(\"\");\n  const [discount, handleChangeDicount, setDiscout] = useInputState(0);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isAvailable, setIsAvailable] = useState(true);\n  const [image, setImage] = useState(\"\");\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [displayImage, setDisplayImage] = useState(\"\");\n  const [snakeBarOpen, setSnakeBarOpen] = useState(false);\n  const [snakeBarType, setSnakeBarType] = useState(\"success\");\n  const [snakeMessage, setSnakeMessage] = useState(\"\");\n\n  const submitForm = async e => {\n    e.preventDefault();\n    const formdata = new FormData();\n    formdata.append(\"nameEN\", nameEN);\n    formdata.append(\"nameBN\", nameBN);\n    formdata.append(\"inStockQuantity\", inStockQuantity);\n    formdata.append(\"measurementUnit\", measurementUnit);\n    formdata.append(\"price\", price);\n    formdata.append(\"discount\", discount);\n    formdata.append(\"addedBy\", localStorage.getItem(\"userId\"));\n    formdata.append(\"image\", image);\n    formdata.append(\"details\", details);\n    formdata.append(\"isAvailable\", isAvailable);\n    const progress = {\n      onUploadProgress: ProgressEvent => {\n        const {\n          loaded,\n          total\n        } = ProgressEvent;\n        let percent = Math.floor(loaded * 100 / total);\n\n        if (percent < 100) {\n          setUploadProgress(percent);\n        }\n      }\n    };\n    axios.post('http://localhost:5000/api/avater/add', formdata, {\n      headers: {\n        \"x-access-token\": localStorage.getItem('token')\n      }\n    }, progress).then(res => {\n      if (res.status === 201) {\n        setUploadProgress(100);\n        resetFields();\n        setSnakeBarOpen(true);\n        setSnakeMessage(\"Product added succesfuly\");\n        setSnakeBarType('success');\n      }\n    }).catch(err => {\n      setUploadProgress(0);\n      setSnakeBarOpen(true);\n      setSnakeMessage('Failed to add product, please try a agian');\n      setSnakeBarType('error');\n    });\n  };\n\n  const handleCloseSnakeBar = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSnakeBarOpen(false);\n  };\n\n  useEffect(() => {\n    const type = localStorage.getItem(\"userType\");\n\n    if (type === \"AVATER\") {\n      setIsAdmin(true);\n    }\n  }, [isAdmin]);\n\n  const handleChangeIsAvailable = event => {\n    setIsAvailable(event.target.checked);\n    console.log(isAvailable);\n  };\n\n  const classes = style();\n  useEffect(() => {\n    setTimeout(() => {\n      setUploadProgress(0);\n    }, 1000);\n  }, [uploadProgress]);\n\n  const imageSelectHandeler = files => {\n    setImage(files[0]);\n    const reader = new FileReader();\n\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setDisplayImage(reader.result);\n      }\n    };\n\n    if (files[0] && files[0].type.match('image.*')) {\n      reader.readAsDataURL(files[0]);\n    }\n  };\n\n  const resetFields = () => {\n    setNameEn(\"\");\n    setNameBN(\"\");\n    setInStockQuantity(\"\");\n    setMeasurementUnit(\"\");\n    setPrice(\"\");\n    setDiscout(0);\n    setImage(\"\");\n    setdetails(\"\");\n  };\n\n  let imageSelectedMsg = /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"h4\",\n    className: classes.imagetext,\n    children: \"Select an Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 28\n  }, this);\n\n  if (displayImage !== \"\") {\n    imageSelectedMsg = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: displayImage,\n      className: classes.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 28\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snakeBarOpen,\n      autoHideDuration: 6000,\n      onClose: handleCloseSnakeBar,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseSnakeBar,\n        severity: snakeBarType,\n        sx: {\n          width: '100%'\n        },\n        children: snakeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), isAdmin && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          children: \"Enter product details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(BorderLinearProgress, {\n          value: uploadProgress,\n          variant: \"determinate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            direction: \"row\",\n            justifyContent: \"space-between\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              direction: \"column\",\n              spacing: 2,\n              xs: 12,\n              lg: 6,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Name (English)\",\n                  variant: \"standard\",\n                  value: nameEN,\n                  onChange: handleChangeNameEn,\n                  required: true,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Name (bn)\",\n                  variant: \"standard\",\n                  value: nameBN,\n                  onChange: handleChangeNameBn,\n                  required: true,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"In stock\",\n                  variant: \"standard\",\n                  type: \"number\",\n                  value: inStockQuantity,\n                  onChange: handleChangeInStockQuantity,\n                  required: true,\n                  fullWidth: true,\n                  InputProps: {\n                    inputProps: {\n                      min: 0\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"mesurement unit\",\n                  variant: \"standard\",\n                  value: measurementUnit,\n                  onChange: handleChangeMeasurementUnit,\n                  required: true,\n                  fullWidth: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"price\",\n                  variant: \"standard\",\n                  type: \"number\",\n                  value: price,\n                  onChange: handleChangePrice,\n                  required: true,\n                  fullWidth: true,\n                  InputProps: {\n                    inputProps: {\n                      min: 0\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Discount\",\n                  type: \"number\",\n                  variant: \"standard\",\n                  value: discount,\n                  onChange: handleChangeDicount,\n                  required: true,\n                  fullWidth: true,\n                  InputProps: {\n                    inputProps: {\n                      min: 0,\n                      max: 100\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"product_details\",\n                  label: \"Description\",\n                  type: \"text\",\n                  variant: \"standard\",\n                  value: details,\n                  onChange: handleChangeDetails,\n                  multiline: true,\n                  rows: 4,\n                  fullWidth: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                  label: \"Make available in products page and search results\",\n                  control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isAvailable,\n                    onChange: handleChangeIsAvailable\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 58\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              lg: 6,\n              children: [imageSelectedMsg, /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  component: \"label\",\n                  fullWidth: true,\n                  sx: {\n                    marginTop: \"1rem\"\n                  },\n                  children: [\"Select a product image\", /*#__PURE__*/_jsxDEV(\"input\", {\n                    name: \"image\",\n                    type: \"file\",\n                    onChange: e => {\n                      imageSelectHandeler(e.target.files);\n                    },\n                    hidden: true,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                sx: {\n                  marginTop: \"1rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  fullWidth: true,\n                  onClick: submitForm,\n                  variant: \"outlined\",\n                  children: \"Add product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 18\n    }, this), !isAdmin && /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: \"404 | This page could not be found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddProducts, \"zPsQOyjIABUkJG9p0VX8DJPJXF8=\", false, function () {\n  return [useInputState, useInputState, useInputState, useInputState, useInputState, useInputState, useInputState];\n});\n\n_c3 = AddProducts;\nexport default AddProducts;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Alert$React.forwardRef\");\n$RefreshReg$(_c2, \"Alert\");\n$RefreshReg$(_c3, \"AddProducts\");","map":{"version":3,"sources":["H:/Agro Chain/agro_chain/client/src/components/adminComponents/AddProducts.js"],"names":["React","useState","useEffect","axios","Typography","TextField","Button","Paper","Box","Grid","Snackbar","MuiAlert","Checkbox","FormControlLabel","BorderLinearProgress","style","useInputState","Alert","forwardRef","props","ref","AddProducts","nameEN","handleChangeNameEn","setNameEn","nameBN","handleChangeNameBn","setNameBN","inStockQuantity","handleChangeInStockQuantity","setInStockQuantity","measurementUnit","handleChangeMeasurementUnit","setMeasurementUnit","details","handleChangeDetails","setdetails","price","handleChangePrice","setPrice","discount","handleChangeDicount","setDiscout","isAdmin","setIsAdmin","isAvailable","setIsAvailable","image","setImage","uploadProgress","setUploadProgress","displayImage","setDisplayImage","snakeBarOpen","setSnakeBarOpen","snakeBarType","setSnakeBarType","snakeMessage","setSnakeMessage","submitForm","e","preventDefault","formdata","FormData","append","localStorage","getItem","progress","onUploadProgress","ProgressEvent","loaded","total","percent","Math","floor","post","headers","then","res","status","resetFields","catch","err","handleCloseSnakeBar","event","reason","type","handleChangeIsAvailable","target","checked","console","log","classes","setTimeout","imageSelectHandeler","files","reader","FileReader","onload","readyState","result","match","readAsDataURL","imageSelectedMsg","imagetext","width","form","inputProps","min","max","marginTop","textAlign"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n// MaterialUI Elements\r\nimport Typography from '@mui/material/Typography';\r\nimport TextField from '@mui/material/TextField';\r\nimport Button from '@mui/material/Button';\r\nimport Paper from '@mui/material/Paper';\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\nimport BorderLinearProgress from '../../styles/BorderLinearProgress';\r\nimport style from \"../../styles/formStyle\"\r\nimport useInputState from '../../hooks/useInputState';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n  \r\nfunction AddProducts() {\r\n    const [nameEN, handleChangeNameEn, setNameEn] = useInputState(\"\");\r\n    const [nameBN, handleChangeNameBn, setNameBN] = useInputState(\"\");\r\n    const [inStockQuantity, handleChangeInStockQuantity, setInStockQuantity] = useInputState(\"\");\r\n    const [measurementUnit, handleChangeMeasurementUnit, setMeasurementUnit] = useInputState(\"\");\r\n    const [details, handleChangeDetails, setdetails] = useInputState(\"\");\r\n    const [price, handleChangePrice, setPrice] = useInputState(\"\");\r\n    const [discount, handleChangeDicount, setDiscout] = useInputState(0);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [isAvailable, setIsAvailable] = useState(true);\r\n\r\n    const [image, setImage] = useState(\"\");\r\n    const [uploadProgress, setUploadProgress] = useState(0);\r\n    const [displayImage, setDisplayImage] = useState(\"\");\r\n\r\n    const [snakeBarOpen, setSnakeBarOpen] = useState(false);\r\n    const [snakeBarType, setSnakeBarType] = useState(\"success\");\r\n    const [snakeMessage, setSnakeMessage] = useState(\"\");\r\n\r\n    \r\n    const submitForm = async (e) => {\r\n        e.preventDefault();\r\n        const formdata = new FormData();\r\n        formdata.append(\"nameEN\", nameEN);\r\n        formdata.append(\"nameBN\", nameBN);\r\n        formdata.append(\"inStockQuantity\", inStockQuantity);\r\n        formdata.append(\"measurementUnit\", measurementUnit);\r\n        formdata.append(\"price\", price);\r\n        formdata.append(\"discount\", discount);\r\n        formdata.append(\"addedBy\", localStorage.getItem(\"userId\"))\r\n        formdata.append(\"image\", image);\r\n        formdata.append(\"details\", details);\r\n        formdata.append(\"isAvailable\", isAvailable);\r\n\r\n        const progress = {\r\n            onUploadProgress: (ProgressEvent) => {\r\n                const {loaded, total} = ProgressEvent;\r\n                let percent = Math.floor((loaded * 100) / total);\r\n                if(percent < 100){\r\n                    setUploadProgress(percent);\r\n                }\r\n            }\r\n        }\r\n    \r\n        axios.post('http://localhost:5000/api/avater/add', formdata , {\r\n            headers: {\r\n                \"x-access-token\": localStorage.getItem('token')\r\n            }\r\n        }, progress).then(res => {\r\n            if(res.status === 201){\r\n                setUploadProgress(100);\r\n                resetFields();\r\n                setSnakeBarOpen(true);\r\n                setSnakeMessage(\"Product added succesfuly\")\r\n                setSnakeBarType('success')\r\n            }\r\n        }).catch(err => {\r\n            setUploadProgress(0);\r\n            setSnakeBarOpen(true);\r\n            setSnakeMessage('Failed to add product, please try a agian')\r\n            setSnakeBarType('error')\r\n        });\r\n    }\r\n\r\n\r\n    const handleCloseSnakeBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnakeBarOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const type = localStorage.getItem(\"userType\");\r\n        if(type === \"AVATER\"){\r\n            setIsAdmin(true);\r\n        }\r\n    }, [isAdmin])\r\n\r\n    const handleChangeIsAvailable = (event) => {\r\n        setIsAvailable(event.target.checked);\r\n        console.log(isAvailable)\r\n    }\r\n\r\n\r\n    const classes = style()\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setUploadProgress(0);\r\n        }, 1000)\r\n    }, [uploadProgress])\r\n\r\n    const imageSelectHandeler = files => {\r\n        setImage(files[0]);\r\n        const reader = new FileReader();\r\n        reader.onload = () => {\r\n            if(reader.readyState === 2){\r\n                setDisplayImage(reader.result)\r\n            }\r\n        }\r\n        if (files[0] && files[0].type.match('image.*')) {\r\n            reader.readAsDataURL(files[0]);\r\n        }\r\n    }\r\n\r\n    const resetFields = () => {\r\n        setNameEn(\"\");\r\n        setNameBN(\"\");\r\n        setInStockQuantity(\"\");\r\n        setMeasurementUnit(\"\");\r\n        setPrice(\"\");\r\n        setDiscout(0);\r\n        setImage(\"\");      \r\n        setdetails(\"\");\r\n    }\r\n\r\n    let imageSelectedMsg = <Typography variant=\"h4\" className = {classes.imagetext}>Select an Image</Typography>\r\n    if(displayImage !== \"\"){\r\n        imageSelectedMsg = <img src= {displayImage} className={classes.image}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Snackbar open={snakeBarOpen} autoHideDuration={6000} onClose={handleCloseSnakeBar}>\r\n                <Alert onClose={handleCloseSnakeBar} severity={snakeBarType} sx={{ width: '100%' }}>\r\n                    {snakeMessage}\r\n                </Alert>\r\n            </Snackbar>\r\n\r\n            {isAdmin && \r\n                (<Paper elevation={6} > \r\n                    <form className={classes.form}>\r\n                        <Typography variant=\"h3\">\r\n                            Enter product details\r\n                        </Typography>\r\n\r\n                        <BorderLinearProgress \r\n                            value={uploadProgress} \r\n                            variant=\"determinate\"\r\n                        />\r\n                        <Box sx={{ width: '100%' }}>\r\n                            <Grid container \r\n                                spacing={2} \r\n                                direction=\"row\" \r\n                                justifyContent=\"space-between\"\r\n                            >\r\n                                <Grid container item \r\n                                    direction=\"column\" \r\n                                    spacing={2} \r\n                                    xs={12} lg={6}\r\n                                >\r\n                                    <Grid item>\r\n                                        <TextField id=\"standard-basic\" \r\n                                            label=\"Name (English)\" \r\n                                            variant=\"standard\" \r\n                                            value={nameEN} \r\n                                            onChange={handleChangeNameEn}\r\n                                            required\r\n                                            fullWidth\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField id=\"standard-basic\" \r\n                                            label=\"Name (bn)\" \r\n                                            variant=\"standard\" \r\n                                            value={nameBN} \r\n                                            onChange={handleChangeNameBn}\r\n                                            required\r\n                                            fullWidth\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField id=\"standard-basic\" \r\n                                            label=\"In stock\" \r\n                                            variant=\"standard\" \r\n                                            type=\"number\"\r\n                                            value={inStockQuantity}\r\n                                            onChange={handleChangeInStockQuantity}\r\n                                            required\r\n                                            fullWidth\r\n                                            InputProps={{ inputProps: { min: 0 }}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField id=\"standard-basic\" \r\n                                            label=\"mesurement unit\" \r\n                                            variant=\"standard\" \r\n                                            value={measurementUnit}\r\n                                            onChange={handleChangeMeasurementUnit}\r\n                                            required\r\n                                            fullWidth\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        <TextField id=\"standard-basic\" \r\n                                            label=\"price\" \r\n                                            variant=\"standard\" \r\n                                            type=\"number\"\r\n                                            value={price}\r\n                                            onChange={handleChangePrice}\r\n                                            required\r\n                                            fullWidth\r\n                                            InputProps={{ inputProps: { min: 0 }}}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item>                   \r\n                                        <TextField id=\"standard-basic\" \r\n                                            label=\"Discount\" \r\n                                            type=\"number\"\r\n                                            variant=\"standard\" \r\n                                            value={discount}\r\n                                            onChange={handleChangeDicount}\r\n                                            required\r\n                                            fullWidth\r\n                                            InputProps={{ inputProps: { min: 0, max: 100 }}}\r\n                                        />\r\n                                    </Grid>                            \r\n                                        <Grid item>                   \r\n                                            <TextField id=\"product_details\" \r\n                                                label=\"Description\" \r\n                                                type=\"text\"\r\n                                                variant=\"standard\" \r\n                                                value={details}\r\n                                                onChange={handleChangeDetails}\r\n                                                multiline = {true}\r\n                                                rows={4}\r\n                                                fullWidth\r\n                                                required\r\n                                            />\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                        <FormControlLabel\r\n                                                label=\"Make available in products page and search results\"\r\n                                                control={<Checkbox checked={isAvailable} onChange={handleChangeIsAvailable} />}\r\n                                            />\r\n                                        </Grid>\r\n                                </Grid>\r\n                                <Grid item xs={12} lg={6}>\r\n                                    {imageSelectedMsg}\r\n                                    <Grid item>\r\n                                        <Button variant=\"contained\" component=\"label\" fullWidth sx={{marginTop: \"1rem\"}}>\r\n                                            Select a product image\r\n                                            <input name=\"image\" \r\n                                                type=\"file\" \r\n                                                onChange={(e) => {imageSelectHandeler(e.target.files)}}\r\n                                                hidden\r\n                                                required\r\n                                            />\r\n                                        </Button>\r\n                                    </Grid >\r\n                                    <Grid item sx={{marginTop: \"1rem\"}}>\r\n                                        <Button fullWidth \r\n                                            onClick={submitForm} \r\n                                            variant=\"outlined\" \r\n                                        >\r\n                                            Add product\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Box>\r\n                    </form>\r\n                </Paper>)\r\n            }\r\n            {!isAdmin && \r\n                <h1 style={{textAlign: \"center\"}}>404 | This page could not be found.</h1>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProducts;\r\n"]},"metadata":{},"sourceType":"module"}