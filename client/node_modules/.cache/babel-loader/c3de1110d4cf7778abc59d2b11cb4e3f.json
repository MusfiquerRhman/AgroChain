{"ast":null,"code":"import axios from \"axios\";\nexport const login = async (email, password) => {\n  try {\n    const formdata = new FormData();\n    formdata.append(\"email\", email);\n    formdata.append(\"password\", password);\n    return await axios.post('http://localhost:5000/api/user/login', formdata);\n  } catch (err) {\n    return -1;\n  }\n};\nexport const register = async (name, businessName, password, address, phoneNo) => {\n  const formdata = new FormData();\n  formdata.append(\"name\", name);\n  formdata.append(\"businessName\", businessName);\n  formdata.append(\"password\", password);\n  formdata.append(\"address\", address);\n  formdata.append(\"phoneNo\", phoneNo);\n  formdata.append(\"email\", email);\n};\nconst formdata = new FormData();\naxios.post('http://localhost:5000/api/user/registration', formdata).then(res => {\n  if (res.status === 201) {\n    setIsRegistrated(true);\n  } else if (res.status === 205) {\n    setFlashMEssage(\"Phone no or Email already exist! Try new one\");\n  }\n}).catch(err => {\n  setFlashMEssage(\"Server Error! please try again later\");\n  console.log(err.message);\n});","map":{"version":3,"sources":["H:/AgroChain/client/src/api/users/index.js"],"names":["axios","login","email","password","formdata","FormData","append","post","err","register","name","businessName","address","phoneNo","then","res","status","setIsRegistrated","setFlashMEssage","catch","console","log","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC5C,MAAI;AACA,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,KAAzB;AACAE,IAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BH,QAA5B;AACA,WAAO,MAAMH,KAAK,CAACO,IAAN,CAAW,sCAAX,EAAmDH,QAAnD,CAAb;AACH,GALD,CAKE,OAAOI,GAAP,EAAY;AACV,WAAO,CAAC,CAAR;AACH;AACJ,CATM;AAWP,OAAO,MAAMC,QAAQ,GAAG,OAAOC,IAAP,EAAaC,YAAb,EAA2BR,QAA3B,EAAqCS,OAArC,EAA8CC,OAA9C,KAA4D;AAChF,QAAMT,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBI,IAAxB;AACAN,EAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCK,YAAhC;AACAP,EAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4BH,QAA5B;AACAC,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BM,OAA3B;AACAR,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BO,OAA3B;AACAT,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBJ,KAAzB;AAGH,CAVM;AAYP,MAAME,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAGYL,KAAK,CAACO,IAAN,CAAW,6CAAX,EAA0DH,QAA1D,EAAoEU,IAApE,CAAyEC,GAAG,IAAI;AAC5E,MAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AAClBC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAFD,MAGK,IAAGF,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AACvBE,IAAAA,eAAe,CAAC,8CAAD,CAAf;AACH;AACJ,CAPD,EAOGC,KAPH,CAOSX,GAAG,IAAI;AACZU,EAAAA,eAAe,CAAC,sCAAD,CAAf;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYb,GAAG,CAACc,OAAhB;AACH,CAVD","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const login = async (email, password) => {\r\n    try {\r\n        const formdata = new FormData();\r\n        formdata.append(\"email\", email);\r\n        formdata.append(\"password\", password);\r\n        return await axios.post('http://localhost:5000/api/user/login', formdata);\r\n    } catch (err) {\r\n        return -1;\r\n    }\r\n}\r\n\r\nexport const register = async (name, businessName, password, address, phoneNo, ) => {\r\n    const formdata = new FormData();\r\n    formdata.append(\"name\", name);\r\n    formdata.append(\"businessName\", businessName);\r\n    formdata.append(\"password\", password);\r\n    formdata.append(\"address\", address);\r\n    formdata.append(\"phoneNo\", phoneNo);\r\n    formdata.append(\"email\", email);\r\n\r\n\r\n}\r\n\r\nconst formdata = new FormData();\r\n\r\n\r\n            axios.post('http://localhost:5000/api/user/registration', formdata).then(res => {\r\n                if(res.status === 201){\r\n                    setIsRegistrated(true);\r\n                }\r\n                else if(res.status === 205){\r\n                    setFlashMEssage(\"Phone no or Email already exist! Try new one\")\r\n                }\r\n            }).catch(err => {\r\n                setFlashMEssage(\"Server Error! please try again later\")\r\n                console.log(err.message);\r\n            });"]},"metadata":{},"sourceType":"module"}