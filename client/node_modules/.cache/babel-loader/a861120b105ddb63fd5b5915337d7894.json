{"ast":null,"code":"var _jsxFileName = \"H:\\\\Agro Chain\\\\agro_chain\\\\client\\\\src\\\\components\\\\productsComponents\\\\seasons\\\\seasonItems.js\";\nimport React from 'react'; // MaterialUI Elements\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport * as adminApi from \"../../../api/admin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SeasonsItems(props) {\n  const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const {\n    SEASON_DESCRIPTION,\n    SEASON_END_DAY,\n    SEASON_END_MONTH,\n    SEASON_NAME,\n    SEASON_START_DAY,\n    SEASON_START_MONTH\n  } = props;\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Dialog, {\n      open: openAddForm,\n      onClose: cancelSeason,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add Season\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"To add a new season, enter the name of the season and select the start and end date of the season. year dosen't matter, select the month and date.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              direction: \"column\",\n              spacing: 2,\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"registration-name\",\n                  label: \"Season Name\",\n                  variant: \"standard\",\n                  value: seasonName,\n                  onChange: handleChangeSeasonName,\n                  required: true,\n                  sx: {\n                    width: \"100%\",\n                    minWidth: \"270px\",\n                    marginTop: \"1rem\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                  dateAdapter: AdapterDateFns,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    openTo: \"month\",\n                    views: ['month', 'day'],\n                    label: \"Select when the season starts\",\n                    value: startDate,\n                    onChange: newValue => {\n                      setStartDate(newValue);\n                    },\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                      helperText: null,\n                      sx: {\n                        width: \"100%\",\n                        minWidth: \"270px\",\n                        marginBottom: \"0.5rem\",\n                        marginTop: \"0.5rem\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n                  dateAdapter: AdapterDateFns,\n                  children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                    openTo: \"month\",\n                    views: ['month', 'day'],\n                    label: \"Select when the season Ends\",\n                    value: endDate,\n                    onChange: newValue => {\n                      setEndDate(newValue);\n                    },\n                    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                      helperText: null,\n                      sx: {\n                        width: \"100%\",\n                        minWidth: \"270px\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"registration-description\",\n                  label: \"Description\",\n                  type: \"text\",\n                  variant: \"standard\",\n                  value: description,\n                  onChange: handleChangeDescription,\n                  multiline: true,\n                  rows: 4,\n                  required: true,\n                  placeholder: \"250 Charecters max\",\n                  inputProps: {\n                    maxLength: 250\n                  },\n                  sx: {\n                    width: \"100%\",\n                    minWidth: \"270px\",\n                    marginTop: \"1rem\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: submitForm,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: cancelSeason,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        maxWidth: 345\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: SEASON_NAME\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            height: \"10rem\",\n            overflow: \"hidden\",\n            textOverflow: \"string\"\n          },\n          children: SEASON_DESCRIPTION\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            marginTop: \"0.5rem\"\n          },\n          children: [\"Duration: \", `${SEASON_START_DAY} ${months[SEASON_START_MONTH]} - ${SEASON_END_DAY} ${months[SEASON_END_MONTH]}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: handleClickEdit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          color: \"error\" // onClick={handleClickOpenDelete} \n          ,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_c = SeasonsItems;\n\nvar _c;\n\n$RefreshReg$(_c, \"SeasonsItems\");","map":{"version":3,"sources":["H:/Agro Chain/agro_chain/client/src/components/productsComponents/seasons/seasonItems.js"],"names":["React","Card","CardActions","CardContent","Button","Typography","adminApi","SeasonsItems","props","months","SEASON_DESCRIPTION","SEASON_END_DAY","SEASON_END_MONTH","SEASON_NAME","SEASON_START_DAY","SEASON_START_MONTH","console","log","openAddForm","cancelSeason","width","seasonName","handleChangeSeasonName","minWidth","marginTop","AdapterDateFns","startDate","newValue","setStartDate","params","marginBottom","endDate","setEndDate","description","handleChangeDescription","maxLength","submitForm","maxWidth","height","overflow","textOverflow","handleClickEdit"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\n// MaterialUI Elements\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport * as adminApi from \"../../../api/admin\"\r\n\r\nexport default function SeasonsItems(props) {\r\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const {\r\n        SEASON_DESCRIPTION,\r\n        SEASON_END_DAY,\r\n        SEASON_END_MONTH,\r\n        SEASON_NAME,\r\n        SEASON_START_DAY,\r\n        SEASON_START_MONTH,\r\n    } = props\r\n\r\n    \r\n\r\n    console.log(props)\r\n\r\n    return (\r\n        <React.Fragment>\r\n\r\n            <Dialog open={openAddForm} onClose={cancelSeason}>\r\n                    <form>\r\n                        <DialogTitle>Add Season</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>\r\n                                To add a new season, enter the name of the season and select the start and end date of the season. year dosen't matter, select the month and date.\r\n                            </DialogContentText>\r\n                            <Box sx={{ width: '100%' }}>\r\n                                <Grid container \r\n                                    item \r\n                                    direction=\"column\" \r\n                                    spacing={2} \r\n                                    justifyContent=\"center\" \r\n                                    alignItems=\"center\"\r\n                                >\r\n                                    <Grid item>\r\n                                        <TextField id=\"registration-name\" \r\n                                            label=\"Season Name\" \r\n                                            variant=\"standard\" \r\n                                            value={seasonName} \r\n                                            onChange={handleChangeSeasonName}\r\n                                            required\r\n                                            sx={{\r\n                                                width:\"100%\", \r\n                                                minWidth: \"270px\", \r\n                                                marginTop: \"1rem\"\r\n                                            }}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item> \r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                            <DatePicker\r\n                                                openTo=\"month\"\r\n                                                views={['month', 'day']}\r\n                                                label=\"Select when the season starts\"\r\n                                                value={startDate}\r\n                                                onChange={(newValue) => {\r\n                                                    setStartDate(newValue);\r\n                                                }}\r\n                                                renderInput={(params) => \r\n                                                    <TextField {...params} \r\n                                                        helperText={null} \r\n                                                        sx={{\r\n                                                            width:\"100%\", \r\n                                                            minWidth: \"270px\",\r\n                                                            marginBottom: \"0.5rem\", \r\n                                                            marginTop: \"0.5rem\"\r\n                                                        }}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </LocalizationProvider>\r\n                                    </Grid>\r\n                                    <Grid item> \r\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                                            <DatePicker\r\n                                                openTo=\"month\"\r\n                                                views={['month', 'day']}\r\n                                                label=\"Select when the season Ends\"\r\n                                                value={endDate}\r\n                                                onChange={(newValue) => {\r\n                                                    setEndDate(newValue);\r\n                                                }}\r\n                                                renderInput={(params) => \r\n                                                    <TextField {...params} \r\n                                                        helperText={null} \r\n                                                        sx={{width:\"100%\", minWidth: \"270px\"}}\r\n                                                    />\r\n                                                }\r\n                                            />\r\n                                        </LocalizationProvider>\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                    <TextField id=\"registration-description\" \r\n                                        label=\"Description\" \r\n                                        type=\"text\"\r\n                                        variant=\"standard\" \r\n                                        value={description}\r\n                                        onChange={handleChangeDescription}\r\n                                        multiline = {true}\r\n                                        rows={4}\r\n                                        required\r\n                                        placeholder='250 Charecters max'\r\n                                        inputProps={{ maxLength: 250 }}\r\n                                        sx={{\r\n                                            width:\"100%\", \r\n                                            minWidth: \"270px\", \r\n                                            marginTop: \"1rem\"\r\n                                        }}\r\n                                    />\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={submitForm}>Add</Button>\r\n                            <Button onClick={cancelSeason}>Cancel</Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                        {SEASON_NAME}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{height: \"10rem\", overflow: \"hidden\", textOverflow: \"string\"}}>\r\n                        {SEASON_DESCRIPTION}\r\n                    </Typography>\r\n                    <Typography variant='subtitle1' sx={{marginTop: \"0.5rem\"}}>\r\n                        Duration: {`${SEASON_START_DAY} ${months[SEASON_START_MONTH]} - ${SEASON_END_DAY} ${months[SEASON_END_MONTH]}`}\r\n                    </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                    <Button \r\n                        size=\"small\" \r\n                        onClick={handleClickEdit}\r\n                    >\r\n                        Edit\r\n                    </Button>\r\n                    <Button \r\n                        size=\"small\" \r\n                        color=\"error\" \r\n                        // onClick={handleClickOpenDelete} \r\n                        >\r\n                        Delete\r\n                    </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}